{"ast":null,"code":"import { throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ItemService {\n  constructor(http) {\n    this.http = http;\n  }\n  getItems() {\n    return this.http.get('http://localhost:5000/admin/items');\n  }\n  addItems(items) {\n    return this.http.post('http://localhost:5000/admin/item', items);\n  }\n  handleError(error) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(`Backend returned code ${error.status}, ` + `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  }\n}\nItemService.ɵfac = function ItemService_Factory(t) {\n  return new (t || ItemService)(i0.ɵɵinject(i1.HttpClient));\n};\nItemService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ItemService,\n  factory: ItemService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAAqBA,UAAU,QAAQ,MAAM;;;AAM7C,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,QAAQ;IACN,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAS,mCAAmC,CAAC;EACnE;EAEAC,QAAQ,CAACC,KAAW;IAClB,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAS,kCAAkC,EAACD,KAAK,CAAC;EACzE;EAEQE,WAAW,CAACC,KAAwB;IAC1C,IAAIA,KAAK,CAACA,KAAK,YAAYC,UAAU,EAAE;MACrC;MACAC,OAAO,CAACF,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACA,KAAK,CAACG,OAAO,CAAC;KACzD,MAAM;MACL;MACA;MACAD,OAAO,CAACF,KAAK,CACX,yBAAyBA,KAAK,CAACI,MAAM,IAAI,GACzC,aAAaJ,KAAK,CAACA,KAAK,EAAE,CAAC;;IAE/B;IACA,OAAOV,UAAU,CACf,iDAAiD,CAAC;EACtD;;AA1BWC,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAc,SAAXd,WAAW;EAAAe,YAFV;AAAM","names":["throwError","ItemService","constructor","http","getItems","get","addItems","items","post","handleError","error","ErrorEvent","console","message","status","factory","providedIn"],"sourceRoot":"","sources":["D:\\food-bill-management\\client\\src\\app\\Model\\Services\\item\\item.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse} from '@angular/common/http'\nimport { Item } from '../../item.model';\nimport { Observable, throwError } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemService {\n\n  constructor(private http: HttpClient) { }\n\n  getItems(): Observable<any[]> {\n    return this.http.get<Item[]>('http://localhost:5000/admin/items')\n  };\n\n  addItems(items: Item) {\n    return this.http.post<Item[]>('http://localhost:5000/admin/item',items)\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}